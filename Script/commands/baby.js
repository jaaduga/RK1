const axios = require("axios");
const simsim = "https://simsimi.cyberbot.top";

module.exports.config = {
 name: "baby",
 version: "1.0.3",
 hasPermssion: 0,
 credits: "ULLASH",
 description: "Cute AI Baby Chatbot | Talk, Teach & Chat with Emotion тШвя╕П",
 commandCategory: "simsim",
 usages: "[message/query]",
 cooldowns: 0,
 prefix: false
};

module.exports.run = async function ({ api, event, args, Users }) {
 try {
 const uid = event.senderID;
 const senderName = await Users.getNameUser(uid);
 const rawQuery = args.join(" "); 
 const query = rawQuery.toLowerCase(); 

 if (!query) {
 const ran = ["Bolo baby", "hum"];
 const r = ran[Math.floor(Math.random() * ran.length)];
 return api.sendMessage(r, event.threadID, (err, info) => {
 if (!err) {
 global.client.handleReply.push({
 name: module.exports.config.name,
 messageID: info.messageID,
 author: event.senderID,
 type: "simsimi"
 });
 }
 });
 }

 const command = args[0].toLowerCase();
 
 if (["remove", "rm"].includes(command)) {
 const parts = rawQuery.replace(/^(remove|rm)\s*/i, "").split(" - ");
 if (parts.length < 2)
 return api.sendMessage(" | Use: remove [Question] - [Reply]", event.threadID, event.messageID);
 const [ask, ans] = parts.map(p => p.trim());
 const res = await axios.get(`${simsim}/delete?ask=${encodeURIComponent(ask)}&ans=${encodeURIComponent(ans)}`);
 return api.sendMessage(res.data.message, event.threadID, event.messageID);
 }

 if (command === "list") {
 const res = await axios.get(`${simsim}/list`);
 if (res.data.code === 200) {
 return api.sendMessage(
 `тЩ╛ Total Questions Learned: ${res.data.totalQuestions}\nтШЕ Total Replies Stored: ${res.data.totalReplies}\nтШая╕Оя╕О Developer: ${res.data.author}`,
 event.threadID, event.messageID
 );
 } else {
 return api.sendMessage(`Error: ${res.data.message || "Failed to fetch list"}`, event.threadID, event.messageID);
 }
 }

 if (command === "edit") {
 const parts = rawQuery.replace(/^edit\s*/i, "").split(" - ");
 if (parts.length < 3)
 return api.sendMessage(" | Use: edit [Question] - [OldReply] - [NewReply]", event.threadID, event.messageID);
 const [ask, oldReply, newReply] = parts.map(p => p.trim());
 const res = await axios.get(`${simsim}/edit?ask=${encodeURIComponent(ask)}&old=${encodeURIComponent(oldReply)}&new=${encodeURIComponent(newReply)}`);
 return api.sendMessage(res.data.message, event.threadID, event.messageID);
 }

 if (command === "teach") {
 const parts = rawQuery.replace(/^teach\s*/i, "").split(" - ");
 if (parts.length < 2)
 return api.sendMessage(" | Use: teach [Question] - [Reply]", event.threadID, event.messageID);

 const [ask, ans] = parts.map(p => p.trim());
 
 const groupID = event.threadID; 
 let groupName = event.threadName ? event.threadName.trim() : ""; 
 
 if (!groupName && groupID != uid) {
 try {
 const threadInfo = await api.getThreadInfo(groupID);
 if (threadInfo && threadInfo.threadName) {
 groupName = threadInfo.threadName.trim();
 }
 } catch (error) {
 console.error(`Error fetching thread info for ID ${groupID}:`, error);
 }
 }

 let teachUrl = `${simsim}/teach?ask=${encodeURIComponent(ask)}&ans=${encodeURIComponent(ans)}&senderID=${uid}&senderName=${encodeURIComponent(senderName)}&groupID=${encodeURIComponent(groupID)}`;
 
 if (groupName) {
 teachUrl += `&groupName=${encodeURIComponent(groupName)}`;
 }

 const res = await axios.get(teachUrl);
 return api.sendMessage(`${res.data.message || "Reply added successfully!"}`, event.threadID, event.messageID);
 }

 const res = await axios.get(`${simsim}/simsimi?text=${encodeURIComponent(query)}&senderName=${encodeURIComponent(senderName)}`);
 const responses = Array.isArray(res.data.response) ? res.data.response : [res.data.response];

 for (const reply of responses) {
 await new Promise((resolve) => {
 api.sendMessage(reply, event.threadID, (err, info) => {
 if (!err) {
 global.client.handleReply.push({
 name: module.exports.config.name,
 messageID: info.messageID,
 author: event.senderID,
 type: "simsimi"
 });
 }
 resolve();
 }, event.messageID);
 });
 }
 } catch (err) {
 console.error(err);
 return api.sendMessage(`| Error in baby command: ${err.message}`, event.threadID, event.messageID);
 }
};

module.exports.handleReply = async function ({ api, event, Users, handleReply }) {
 try {
 const senderName = await Users.getNameUser(event.senderID);
 const replyText = event.body ? event.body.toLowerCase() : "";
 if (!replyText) return;

 const res = await axios.get(`${simsim}/simsimi?text=${encodeURIComponent(replyText)}&senderName=${encodeURIComponent(senderName)}`);
 const responses = Array.isArray(res.data.response) ? res.data.response : [res.data.response];

 for (const reply of responses) {
 await new Promise((resolve) => {
 api.sendMessage(reply, event.threadID, (err, info) => {
 if (!err) {
 global.client.handleReply.push({
 name: module.exports.config.name,
 messageID: info.messageID,
 author: event.senderID,
 type: "simsimi"
 });
 }
 resolve();
 }, event.messageID);
 }
 );
 }
 } catch (err) {
 console.error(err);
 return api.sendMessage(` | Error in handleReply: ${err.message}`, event.threadID, event.messageID);
 }
};

module.exports.handleEvent = async function ({ api, event, Users }) {
 try {
 const raw = event.body ? event.body.toLowerCase().trim() : "";
 if (!raw) return;
 const senderName = await Users.getNameUser(event.senderID);
 const senderID = event.senderID;

 if (
 raw === "baby" || raw === "bot" || raw === "bby" ||
 raw === "jan" || raw === "xan" || raw === "ржЬрж╛ржи" || raw === "ржмржЯ" || raw === "ржмрзЗржмрж┐" 
 ) {
 const greetings = [
        "рдЬрд╝реНрдпрд╛рджрд╛ рдмреЙрдЯ-рдмреЙрдЯ рдХрд░реЗрдЧрд╛ рддреЛ рдЫреЛрдбрд╝ рджреВрдБрдЧрд╛ рдЧреНрд░реБрдк ЁЯШТ",
  "рдирд╣реАрдВ рд╕реБрдиреВрдБрдЧрд╛ ЁЯШ╝ рддреВрдиреЗ рдореЗрд░реЗ рдмреЙрд╕ рд╕рд╛рд╣реВ рдХреА рд▓рд╡ рд╕реНрдЯреЛрд░реА рд╕реЗрдЯ рдирд╣реАрдВ рдХрд░рд╛рдИ ЁЯе║",
  "рдореИрдВ рдмреЗрд╡рдХреВрдлреЛрдВ рд╕реЗ рдмрд╛рдд рдирд╣реАрдВ рдХрд░рддрд╛, рдУрдХреЗ ЁЯШТ",
  "рдЗрддрдирд╛ рдордд рдмреБрд▓рд╛ рдпрд╛рд░, рдХрд╣реАрдВ рдкреНрдпрд╛рд░ рд╣реА рд╣реЛ рдЬрд╛рдП ЁЯЩИ",
  "рдмреЛрд▓реЛ рдмрд╛рдмреВ ЁЯШП рдХреНрдпрд╛ рддреБрдо рдореЗрд░реЗ рдмреЙрд╕ рд╕рд╛рд╣реВ рд╕реЗ рдкреНрдпрд╛рд░ рдХрд░рддреА рд╣реЛ? ЁЯТЛ",
  "рдмрд╛рд░-рдмрд╛рд░ рдмреБрд▓рд╛рдПрдЧрд╛ рддреЛ рдЧреБрд╕реНрд╕рд╛ рдЖ рдЬрд╛рдПрдЧрд╛ ЁЯШС",
  "рд╣рд╛рдБ рдмреЛрд▓реЛ ЁЯШТ рддреБрдореНрд╣рд╛рд░реЗ рд▓рд┐рдП рдХреНрдпрд╛ рдХрд░ рд╕рдХрддрд╛ рд╣реВрдБ ЁЯШР",
  "рдЗрддрдирд╛ рдХреНрдпреЛрдВ рдмреБрд▓рд╛ рд░рд╣рд╛ рд╣реИ? рдЧрд╛рд▓реА рд╕реБрдирдиреА рд╣реИ рдХреНрдпрд╛ ЁЯдм",
  "I love you рдЬрд╛рдиреВ ЁЯе░",
  "рдЕрд░реЗ рдмреЛрд▓реЛ рдореЗрд░реА рдЬрд╛рди ЁЯШЪ рдХреИрд╕реА рд╣реЛ?",
  "рдЖрдЬ рдореБрдЭреЗ рдмреЙрдЯ рдХрд╣рдХрд░ insult рдХрд░ рджрд┐рдпрд╛ ЁЯШ┐",
  "Hop рдмреЗрдбрд╛ ЁЯШ╛ рдмреЙрд╕ рдмреЛрд▓, рдмреЙрд╕ ЁЯШ╝",
  "рдЪреБрдк рд░рд╣, рд╡рд░рдирд╛ рджрд╛рдБрдд рддреЛрдбрд╝ рджреВрдБрдЧрд╛ ЁЯШд",
  "рдореБрдЭреЗ рдордд рдмреБрд▓рд╛, рд▓рдбрд╝рдХреА рд╣реИ рддреЛ рдореЗрд░реЗ рдмреЙрд╕ рд╕рд╛рд╣реВ рдХреЗ рдЗрдирдмреЙрдХреНрд╕ рдореЗрдВ рдЪрд▓реА рдЬрд╛ ЁЯШВ FB рд▓рд┐рдВрдХ:https://www.facebook.com/61581725692182",
  "рдореБрдЭреЗ рдмреЙрдЯ рдордд рдмреЛрд▓, рдореЗрд░реЗ рдмреЙрд╕ рд╕рд╛рд╣реВ рдХреЛ рдЬрд╛рдиреВ рдмреЛрд▓ ЁЯШШ",
  "рдмрд╛рд░-рдмрд╛рд░ рдбрд┐рд╕реНрдЯрд░реНрдм рдордд рдХрд░, рдЕрдкрдиреЗ рдЬрд╛рдиреВ рдХреЗ рд╕рд╛рде рдмрд┐рдЬреА рд╣реВрдБ ЁЯШЛ",
  "рдР рдмреЗрд╡рдХреВрдл рдЗрддрдирд╛ рдХреНрдпреЛрдВ рдмреБрд▓рд╛ рд░рд╣рд╛ рд╣реИ ЁЯдм",
  "рдореБрдЭреЗ рдмреБрд▓рд╛рдПрдЧрд╛ рддреЛ рдХрд┐рд╕ рдХрд░ рджреВрдБрдЧрд╛ ЁЯШШ",
  "рдореВрдб рдореЗрдВ рдирд╣реАрдВ рд╣реВрдБ рдЕрднреА, рдбрд┐рд╕реНрдЯрд░реНрдм рдордд рдХрд░ ЁЯШТ",
  "рд╣рд╛рдБ рдЬрд╛рдиреВ, рдЗрдзрд░ рдЖ рдПрдХ рдХрд┐рд╕ рджреЗ рджреВрдБ ЁЯШШ",
  "рджреВрд░ рд░рд╣, рддреЗрд░рд╛ рдХреЛрдИ рдХрд╛рдо рдирд╣реАрдВ ЁЯШЛЁЯдг",
  "рддреЗрд░реА рдмрд╛рдд рддреЗрд░реЗ рдШрд░ рд╡рд╛рд▓реЗ рдирд╣реАрдВ рд╕реБрдирддреЗ, рдореИрдВ рдХреНрдпреЛрдВ рд╕реБрдиреВрдБ ЁЯШВ",
  "рдореБрдЭреЗ рдордд рдмреБрд▓рд╛, рдореИрдВ рдмреЙрд╕ рд╕рд╛рд╣реВ рдХреЗ рд╕рд╛рде рдмрд┐рдЬреА рд╣реВрдБ ЁЯШЙ",
  "рдХреНрдпрд╛ рд╣реБрдЖ, рдЧрд▓рддреА рд╕реЗ рдмреБрд▓рд╛ рд▓рд┐рдпрд╛ рдХреНрдпрд╛ ЁЯдг",
  "рдмреЛрд▓ рдХреНрдпрд╛ рдмреЛрд▓реЗрдЧрд╛, рд╕рдмрдХреЗ рд╕рд╛рдордиреЗ рдмреЛрд▓ рдпрд╛ рдЕрдХреЗрд▓реЗ ЁЯдн",
  "рд▓рдбрд╝рдХреА рд╣реИ рддреЛ рдЬрд╛ рдмреЙрд╕ рд╕рд╛рд╣реВ рдХреЗ рдЗрдирдмреЙрдХреНрд╕ рдореЗрдВ ЁЯШНЁЯТХ FB:https://www.facebook.com/61581725692182",
  "рдХрд▓ рдорд┐рд▓рдирд╛ рдЬрд╝рд░реВрд░ ЁЯШИ",
  "рд╣рд╛рдБ рдмреЛрд▓ рд╕реБрди рд░рд╣рд╛ рд╣реВрдБ ЁЯШП",
  "рдХрд┐рддрдиреА рдмрд╛рд░ рдмреБрд▓рд╛рдПрдЧрд╛, рд╕реБрди рддреЛ рд░рд╣рд╛ рд╣реВрдБ ЁЯШС",
  "рд╣реВрдБ рдмреЛрд▓ рдХреНрдпрд╛ рдЪрд╛рд╣рд┐рдП ЁЯШТ",
  "рдмреЛрд▓реЛ рддреБрдореНрд╣рд╛рд░реЗ рд▓рд┐рдП рдХреНрдпрд╛ рдХрд░ рд╕рдХрддрд╛ рд╣реВрдБ ЁЯШО",
  "рдореИрдВ рддреЛ рдЕрдВрдзрд╛ рд╣реВрдБ рдХреБрдЫ рджреЗрдЦрддрд╛ рдирд╣реАрдВ ЁЯР╕",
  "рдЕрд░реЗ рдмреЗрд╡рдХреВрдл рдмреЙрдЯ рдордд рдмреЛрд▓, рдЬрд╛рдиреВ рдмреЛрд▓ ЁЯШМ",
  "рдмреЛрд▓реЛ рдЬрд╛рдиреВ ЁЯМЪ",
  "рдирдЬрд╝рд░ рдирд╣реАрдВ рдЖрддрд╛ рдореИрдВ рдмрд┐рдЬреА рд╣реВрдБ ЁЯШТ",
  "рд╣рд╛рдБ рдЬрд╛рди рддреБрдореНрд╣рд╛рд░реЗ рд╡рд╣реАрдВ рдЙрдореНрдореНрдореНрдорд╛рд╣ ЁЯШШ",
  "рдЖрд╣ рд╕реБрдиреЛ рдЬрд╛рди, рддреБрдореНрд╣рд╛рд░реЗ рдЧрд▓реА-рдореЛрд╣рд▓реНрд▓реЗ рдореЗрдВ рдЙрдореНрдорд╛рд╣ ЁЯШЗЁЯШШ",
  "рдЬрдВрдЧ рдХрд░реЗрдЧрд╛ рдХреНрдпрд╛ ЁЯШТ",
  "рдЕрд╕реНрд╕рд▓рд╛рдореБ рдЕрд▓реИрдХреБрдо! рдмрддрд╛рдУ, рдХреНрдпрд╛ рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдБ ЁЯе░",
  "рдЕрдЧрд░ рдкреНрдпрд╛рд░ рдХрд╛ рдбреНрд░рд╛рдорд╛ рдХрд░рдирд╛ рд╣реИ рддреЛ рдмреЙрд╕ рд╕рд╛рд╣реВ рдХреЗ рдЗрдирдмреЙрдХреНрд╕ рдореЗрдВ рдЬрд╛ ЁЯдг FB: https://www.facebook.com/61581725692182",
  "рдореБрдЭреЗ рдордд рдмреБрд▓рд╛, рдЬрд╛рдХрд░ рдмреЙрд╕ рд╕рд╛рд╣реВ рдХреЛ рдХреЛрдИ рдЧрд░реНрд▓рдлреНрд░реЗрдВрдб рджрд┐рд▓рд╛ рджреЗ ЁЯЩД",
  "рдЗрддрдирд╛ рдХреНрдпреЛрдВ рдмреБрд▓рд╛ рд░рд╣реА рд╣реИ, рдкреНрдпрд╛рд░ рдХрд░рддреА рд╣реИ рдХреНрдпрд╛ ЁЯднЁЯЩИ",
  "ЁЯМ╗ЁЯМ║ЁЯТЪ рдЕрд╕реНрд╕рд▓рд╛рдореБ рдЕрд▓реИрдХреБрдо рд╡ рд░рд╣рдорддреБрд▓реНрд▓рд╛рд╣ ЁЯТЪЁЯМ║ЁЯМ╗",
  "рдореИрдВ рдЕрднреА рдмреЙрд╕ рд╕рд╛рд╣реВ рдХреЗ рд╕рд╛рде рдмрд┐рдЬреА рд╣реВрдБ, рдкреНрд▓реАрдЬрд╝ рдбрд┐рд╕реНрдЯрд░реНрдм рдордд рдХрд░реЛ ЁЯШП",
  "рдореБрдЭреЗ рдордд рдмреБрд▓рд╛, рдореЗрд░реЗ рдмреЙрд╕ рд╕рд╛рд╣реВ рдХреЛ рдХреЛрдИ рдЬреАрдПрдл рджрд┐рд▓рд╛ рджреЗ ЁЯШ╜",
  "рдЙрдлреНрдл рд╕рдордЭ рдирд╣реАрдВ рдЖрддрд╛ рдЗрддрдирд╛ рдХреНрдпреЛрдВ рдмреБрд▓рд╛ рд░рд╣реЗ рд╣реЛ ЁЯШд",
  "рдЬрд╛рди, рдЕрдкрдиреА рдлреНрд░реЗрдВрдб рдХреЛ рдореЗрд░реЗ рдмреЙрд╕ рд╕рд╛рд╣реВ рдХреЗ рд╣рд╡рд╛рд▓реЗ рдХрд░ рджреЗ ЁЯШЭ",
  "рдЖрдЬ рдореВрдб рдСрдл рд╣реИ, рдмреБрд▓рд╛рдирд╛ рдордд ЁЯШк",
  "рдЙрдореНрдореНрдореНрдорд╛рд╣ рдЬрд╛рди, рддреБрдореНрд╣рд╛рд░реЗ рд▓рд┐рдП рд╕реАрдЦ рд░рд╣рд╛ рд╣реВрдБ рдкреНрдпрд╛рд░ рдХрд░рдирд╛ ЁЯШЛЁЯШШ",
  "рдореЗрд░реЗ рдмреЙрд╕ рд╕рд╛рд╣реВ рдХреА рддрд░рдлрд╝ рд╕реЗ рдмрд╣реБрдд рд╕рд╛рд░рд╛ рдкреНрдпрд╛рд░ ЁЯе░ рдЙрдирдХреЗ рд▓рд┐рдП рджреБрдЖ рдХрд░рдирд╛ ЁЯТЪ",
  "рдЕрдЧрд░ рдкреНрдпрд╛рд░ рдХрд░рдирд╛ рд╣реИ рддреЛ рдЬрд╛ рдмреЙрд╕ рд╕рд╛рд╣реВ рдХреЗ рдЗрдирдмреЙрдХреНрд╕ рдореЗрдВ ЁЯдг",
  "рд▓рдбрд╝рдХреА рд╣реИ рддреЛ рдЬрд╛ рдмреЙрд╕ рд╕рд╛рд╣реВ рдХреЗ рдЗрдирдмреЙрдХреНрд╕ рдореЗрдВ ЁЯднЁЯдг FB:https://www.facebook.com/61581725692182",
  "рд╣рдж рд╣реЛ рдЧрдИ, рдЧреНрд░реБрдк рдореЗрдВ рдПрдХ рднреА рдкреНрдпрд╛рд░реА рдмрдВрдбреА рдирд╣реАрдВ ЁЯШй",
  "рджреЗрд╢ рдореЗрдВ рд╕рдм рдЪреЛрд░реА рд╣реЛ рд░рд╣рд╛ рд╣реИ рдмрд╕ рдореЗрд░реЗ рдмреЙрд╕ рд╕рд╛рд╣реВ рдХрд╛ рджрд┐рд▓ рдЫреЛрдбрд╝рдХрд░ ЁЯШП",
  "рддреБрдо рдмрд╣реБрдд рдЕрдЪреНрдЫреА рд▓рдЧрддреА рд╣реЛ ЁЯШ╜ рдЯрд╛рдЗрдо рдЖрдиреЗ рдкрд░ рдкреНрд░рдкреЛрдЬрд╝ рдХрд░ рджреВрдБрдЧрд╛ ЁЯШ╝",
  "рдЖрдЬ рд╕реЗ рдХрд┐рд╕реА рдХреЛ рднрд╛рд╡ рдирд╣реАрдВ рджреВрдБрдЧрд╛ ЁЯШП рдлреЗрдпрд░рдиреЗрд╕ рдХреНрд░реАрдо рдЦрд░реАрдж рд▓реА рд╣реИ ЁЯШО"

      ];

      const randomReply = greetings[Math.floor(Math.random() * greetings.length)];
      const mention = {
        body: `@${senderName} ${randomReply}`,
        mentions: [{
          tag: `@${senderName}`,
          id: senderID
        }]
      };

 return api.sendMessage(mention, event.threadID, (err, info) => {
 if (!err) {
 global.client.handleReply.push({
 name: module.exports.config.name,
 messageID: info.messageID,
 author: event.senderID,
 type: "simsimi"
 });
 }
 }, event.messageID);
 }

 if (
 raw.startsWith("baby ") || raw.startsWith("bot ") || raw.startsWith("bby ") ||
 raw.startsWith("jan ") || raw.startsWith("xan ") ||
 raw.startsWith("ржЬрж╛ржи ") || raw.startsWith("ржмржЯ ") || raw.startsWith("ржмрзЗржмрж┐ ")
 ) {
 const query = raw
 .replace(/^baby\s+|^bot\s+|^bby\s+|^jan\s+|^xan\s+|^ржЬрж╛ржи\s+|^ржмржЯ\s+|^ржмрзЗржмрж┐\s+/i, "")
 .trim();
 if (!query) return;

 const res = await axios.get(`${simsim}/simsimi?text=${encodeURIComponent(query)}&senderName=${encodeURIComponent(senderName)}`);
 const responses = Array.isArray(res.data.response) ? res.data.response : [res.data.response];

 for (const reply of responses) {
 await new Promise((resolve) => {
 api.sendMessage(reply, event.threadID, (err, info) => {
 if (!err) {
 global.client.handleReply.push({
 name: module.exports.config.name,
 messageID: info.messageID,
 author: event.senderID,
 type: "simsimi"
 });
 }
 resolve();
 }, event.messageID);
 });
 }
 }
 } catch (err) {
 console.error(err);
 return api.sendMessage(`| Error in handleEvent: ${err.message}`, event.threadID, event.messageID);
 }
};
